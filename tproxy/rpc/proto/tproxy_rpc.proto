syntax = "proto3";

import "google/protobuf/empty.proto";

package tproxy;

// RegisterCvmRequest is the request for RegisterCvm.
message RegisterCvmRequest {
  // The public key of the WireGuard interface of the CVM.
  string client_public_key = 1;
}

// RegisterCvmResponse is the response for RegisterCvm.
message RegisterCvmResponse {
  // WireGuard configuration
  WireGuardConfig wg = 1;
  // Tappd configuration
  TappdConfig tappd = 2;
}

// WireGuardConfig is the configuration of the WireGuard.
message WireGuardConfig {
  // The public key of the WireGuard interface of the TProxy.
  string server_public_key = 1;
  // The IP address of the CVM.
  string client_ip = 2;
  // The IP address of the TProxy.
  string server_ip = 3;
  // The endpoint of the TProxy.
  string server_endpoint = 4;
}

// TappdConfig is the configuration of the Tappd.
message TappdConfig {
  // The external port of the Tappd.
  uint32 external_port = 1;
  // The in CVM port of the Tappd.
  uint32 internal_port = 2;
  // The domain of the Tappd.
  string domain = 3;
}

// ListResponse is the response for List.
message ListResponse {
  // The list of proxied CVMs.
  repeated HostInfo hosts = 1;
}

// HostInfo is the information of a host.
message HostInfo {
  // The Instance id
  string instance_id = 1;
  // The IP address of the host.
  string ip = 2;
  // The app id of the host.
  string app_id = 3;
  // The base domain of the HTTPS endpoint of the host.
  string base_domain = 4;
  // The external port of the host.
  uint32 port = 5;
  // The latest handshake time of the host.
  uint64 latest_handshake = 6;
}


// AcmeInfoResponse is the response for AcmeInfo.
message AcmeInfoResponse {
  // The ACME account URI.
  string account_uri = 1;
  // The public key history of the certificate.
  repeated bytes hist_keys = 2;
}

// Get HostInfo for associated instance id.
message GetInfoRequest {
  string id = 1;
}

message GetInfoResponse {
  bool found = 1;
  optional HostInfo info = 2;
}

message GetMetaResponse {
  uint32 registered = 1;
  uint32 online = 2;
}

service Tproxy {
  // Register a new proxied CVM.
  rpc RegisterCvm(RegisterCvmRequest) returns (RegisterCvmResponse) {}
  // List all proxied CVMs.
  rpc List(google.protobuf.Empty) returns (ListResponse) {}
  // List all ACME account URIs and the public key history of the certificates for the Content Addressable HTTPS.
  rpc AcmeInfo(google.protobuf.Empty) returns (AcmeInfoResponse) {}
  // Find Proxied HostInfo by instance ID
  rpc GetInfo(GetInfoRequest) returns (GetInfoResponse) {}
  // Summary API for inspect.
  rpc GetMeta(google.protobuf.Empty) returns (GetMetaResponse);
}
